import React, { useState, useEffect } from 'react';
import axios from 'axios';
import { Listing, ResourceType } from '@/shared/marketTypes';
import { getResourceIcon, getResourceName } from '@/lib/resources';

/**
 * –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ –ª–æ—Ç–æ–≤ –Ω–∞ —Ä—ã–Ω–∫–µ
 */
interface MarketListingsProps {
  onListingPurchased?: () => void;
  currentResource?: ResourceType;
  onResourceSelect?: (resource: ResourceType) => void;
}

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ø–∏—Å–∫–æ–≤ –ª–æ—Ç–æ–≤ –Ω–∞ —Ä—ã–Ω–∫–µ
 * 
 * @param onListingPurchased - –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞, –≤—ã–∑—ã–≤–∞–µ–º–∞—è –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –ø–æ–∫—É–ø–∫–∏ –ª–æ—Ç–∞
 * @param currentResource - –¢–µ–∫—É—â–∏–π –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ç–∏–ø —Ä–µ—Å—É—Ä—Å–∞ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
 * @param onResourceSelect - –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –≤—ã–∑–æ–≤–∞ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ —Ä–µ—Å—É—Ä—Å–∞
 */
export function MarketListings({ onListingPurchased, currentResource, onResourceSelect }: MarketListingsProps) {
  const [listings, setListings] = useState<Listing[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  // –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ (–±–µ–∑ –∑–æ–ª–æ—Ç–∞)
  const resources: ResourceType[] = ['food', 'wood', 'oil', 'metal', 'steel', 'weapons'];

  /**
   * –ó–∞–≥—Ä—É–∑–∫–∞ –ª–æ—Ç–æ–≤ —Å —Å–µ—Ä–≤–µ—Ä–∞
   */
  const fetchListings = async () => {
    setLoading(true);
    try {
      const response = await axios.get('/api/market/listings');
      setListings(response.data);
      setError(null);
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ª–æ—Ç–æ–≤:', err);
      setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ª–æ—Ç—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
    } finally {
      setLoading(false);
    }
  };

  /**
   * –ü–æ–∫—É–ø–∫–∞ –ª–æ—Ç–∞
   * 
   * @param listingId - ID –ª–æ—Ç–∞ –¥–ª—è –ø–æ–∫—É–ø–∫–∏
   */
  const purchaseListing = async (listingId: number) => {
    try {
      await axios.post(`/api/market/buy/${listingId}`);
      // –û–±–Ω–æ–≤–ª—è–µ–º —Å–ø–∏—Å–æ–∫ –ª–æ—Ç–æ–≤ –ø–æ—Å–ª–µ –ø–æ–∫—É–ø–∫–∏
      fetchListings();
      if (onListingPurchased) {
        onListingPurchased();
      }
    } catch (err: any) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∫—É–ø–∫–µ –ª–æ—Ç–∞:', err);
      setError(err.response?.data?.message || '–ù–µ —É–¥–∞–ª–æ—Å—å –∫—É–ø–∏—Ç—å –ª–æ—Ç');
    }
  };

  // –ó–∞–≥—Ä—É–∑–∫–∞ –ª–æ—Ç–æ–≤ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    fetchListings();
  }, []);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ä–µ—Å—É—Ä—Å–∞
  const handleResourceSelect = (resource: ResourceType) => {
    if (onResourceSelect) {
      onResourceSelect(resource);
    }
  };

  if (loading) {
    return <div className="text-center p-4">–ó–∞–≥—Ä—É–∑–∫–∞ –ª–æ—Ç–æ–≤...</div>;
  }

  if (error) {
    return (
      <div className="text-center p-4 text-red-500">
        <p>{error}</p>
        <button 
          onClick={fetchListings} 
          className="mt-2 px-4 py-2 bg-blue-500 text-white rounded"
        >
          –ü–æ–≤—Ç–æ—Ä–∏—Ç—å
        </button>
      </div>
    );
  }

  if (listings.length === 0) {
    return <div className="text-center p-4 text-gray-500">–ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –ª–æ—Ç–æ–≤</div>;
  }

  // –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ª–æ—Ç–æ–≤ –ø–æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É —Ä–µ—Å—É—Ä—Å—É, –µ—Å–ª–∏ –æ–Ω —É–∫–∞–∑–∞–Ω
  const filteredListings = currentResource
    ? listings.filter(listing => listing.resourceType === currentResource)
    : listings;

  return (
    <div>
      <div className="mb-4 flex flex-wrap gap-2">
        {resources.map((resource) => (
          <button
            key={resource}
            onClick={() => handleResourceSelect(resource)}
            className={`flex items-center px-3 py-1.5 rounded-full text-sm ${
              currentResource === resource
                ? 'bg-blue-500 text-white'
                : 'bg-gray-100 text-gray-700 hover:bg-gray-200'
            }`}
          >
            <span className="mr-1">{getResourceIcon(resource)}</span>
            <span className="capitalize">{getResourceName(resource)}</span>
          </button>
        ))}
      </div>

      <div className="space-y-4">
        {filteredListings.length > 0 ? (
          filteredListings.map((listing) => (
            <div key={listing.id} className="border rounded-lg p-4 shadow-sm bg-white">
              <div className="flex justify-between items-center">
                <div>
                  <span className="mr-2 text-lg">{getResourceIcon(listing.resourceType)}</span>
                  <span className="font-medium">{getResourceName(listing.resourceType)}</span>
                  <span className="ml-2 text-gray-600">x{listing.amount}</span>
                </div>
                <div className="text-right">
                  <div className="text-sm text-gray-600">
                    –¶–µ–Ω–∞: <span className="font-medium">{listing.price}</span> üí∞
                  </div>
                  <div className="text-sm text-gray-600">
                    –ó–∞ –µ–¥–∏–Ω–∏—Ü—É: <span className="font-medium">{(listing.price / listing.amount).toFixed(2)}</span> üí∞
                  </div>
                </div>
              </div>
              <div className="mt-2 flex justify-between items-center">
                <div className="text-sm text-gray-600">
                  –ü—Ä–æ–¥–∞–≤–µ—Ü: <span className="font-medium">{listing.seller}</span>
                </div>
                <button
                  onClick={() => purchaseListing(listing.id)}
                  className="px-3 py-1 bg-green-500 text-white rounded hover:bg-green-600"
                >
                  –ö—É–ø–∏—Ç—å
                </button>
              </div>
            </div>
          ))
        ) : (
          <div className="text-center p-4 text-gray-500">
            –ù–µ—Ç –ª–æ—Ç–æ–≤ —Å –≤—ã–±—Ä–∞–Ω–Ω—ã–º —Ä–µ—Å—É—Ä—Å–æ–º
          </div>
        )}
      </div>
    </div>
  );
}